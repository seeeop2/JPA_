<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello">
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
<!--
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
-->
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/jpashop"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <property name="hibernate.jdbc.batch_size" value="10"/> <!-- 몇 개의 쿼리를 모아서 DB에 보낼지 결정-->
            <property name="hibernate.hbm2ddl.auto" value="update" /><!--테이블 자동 생성-->
            <!--
            create-drop : create와 같으나, 종료시점에 table drop. 테스트 코드처럼 마지막에 다 없애고 싶을 때 사용
            update : 변경분만 반영(운영DB에서 사용하면 안됨) -> 컬럼 추가할 때 사용. 대신 컬럼 삭제는 불가
            validate : 엔티티와 테이블이 정상 매핑되었는지만 확인
            none : 사용하지 않음

            *운영 장비에는 절대 create, create-drop, update 사용하면 안된다
            개발 초기 단계 : create OR update
            테스트 서버 : update OR validate
            스테이징 & 운영 서버 : validate OR none

            *웹 어플리케이션 계정은 alter OR drop을 못하도록 분리하는 것이 좋다
            -->
        </properties>
    </persistence-unit>
</persistence>